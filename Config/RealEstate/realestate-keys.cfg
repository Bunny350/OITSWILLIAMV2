# This file contains mappings and features of a Raspberry Pi RP2040 inside RealEstate 
# Gen 2.1 display. To use this config, Compile the Klipper firmware with RP2040 micro-
# controller architecture, while you may leave others untouched.
# To ease compiling and flashing, you can type 
# "make menuconfig KCONFIG_CONFIG=config.realestate_fn" and 
# "make flash KCONFIG_CONFIG=config.realestate_fn FLASH_DEVICE=/dev/serial/by-id/usb-Klipper_rp2040_unknown-id"
# respectively.

[mcu realestate_function]
# You may get it's exact id by typing "ls /dev/serial/by-id" on the printer's console.
serial: /dev/serial/by-id/usb-Klipper_rp2040_unknown-id

[gcode_button stop] # Emergency stop, may need to be changed or commented if it's prone to be pressed.
pin: ^!realestate_function:gpio8
press_gcode: {action_emergency_stop()}

[gcode_button home_pause_resume] # This button can perform multiple things, it can home, pause and resume print.
pin: ^!realestate_function:gpio9
press_gcode:
	{% if printer.print_stats.state == "paused" %}
		{% if "pause_resume" in printer %}
       			RESUME
    		{% else %}
        		M24
    	{% endif %}
	{% elif printer.print_stats.state == "printing" %}
	    {% if "pause_resume" in printer %}
    	    PAUSE
    	{% else %}
    	    M25
    	{% endif %}
	{% else %}
			G28			#Home All Axes
	{% endif %}

[gcode_button qgl_pause_stop] # This button can perform multiple things, it can execute QGL or Z tilt, pause and stop print.
pin: ^!realestate_function:gpio10
press_gcode:
	{% if printer.print_stats.state == "paused" %}
		CANCEL_PRINT
	{% endif %}
	{% elif printer.print_stats.state == "printing" %}
	    {% if "pause_resume" in printer %}
    	    PAUSE
    	{% else %}
    	    M25
    	{% endif %}
	{% else %}
		{% if printer.toolhead.homed_axes != "xyz" %}
			G28
		{% endif %}
			G32
	{% endif %}
	
## Below are the reassigned LEDs which uses RP2040 as ARGB controller instead of MCU, which saves 3 wires from tearing.
## If you have re-wired RealEstate chin including power to a dedicated RP2040 in like for example GPIO11, you can un-
## comment below. However you may comment or remove the previous realestate_chin configuration.
## You may change to specific GPIO pin if you re-wire to different GPIO pin.
# [neopixel realestate_chin]
# pin: realestate_function:gpio11
# chain_count: 5
## color_order: GRB
# initial_RED: 1.0
# initial_GREEN: 0.0
# initial_BLUE: 1.0