# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# OITSWILLIAMV2 for V2.4 (r1 / r2) + V2.4 150mm
# If this config was found for the first time, and you think its config is fully suitable,
# you can copy the whole config and then paste them into printer.cfg file, or just [include stock-octopus.cfg] in your printer.cfg file.
# This config has optional settings that needs additional plugins.
# Klicky probe: https://github.com/jlas1/Klicky-Probe/tree/main/Klipper_macros
# PTP: head to ptp.cfg and visit https://gist.github.com/Bunny350/c12d67f4ab930b46caadd36cc3f6822b for wiring instructions.

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section
### Other features                      To the bottom of the line (if not modified).

[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##--------------------------------------------------------------------
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_id_unknown_follow_in_printer_config_file

[temperature_sensor rPi]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 65

# Force Move
# Can be commented after comissioning / setup.
[force_move]
enable_force_move: true

[printer]
kinematics: corexy
max_velocity: 600  
max_accel: 4000
max_z_velocity: 40 
max_z_accel: 350 # 350 for stock V2.4
square_corner_velocity: 5.0


#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0

position_endstop: 150
position_max: 150

homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: true
run_current: 1.2
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: -2
## 150mm
position_endstop: 155
position_max: 155
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: true
run_current: 1.2
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.5
position_max: 140
position_min: -2 # -1 if it can home or probe in more than 0
homing_speed: 40
second_homing_speed: 8
homing_retract_dist: 5

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 1.0
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 1.0
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 1.0
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 1.0
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR6
[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.23	# Clockwork 2, Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
##  Use 15:2 for Galileo Clockwork by JaredC01
gear_ratio: 50:10				# Clockwork 2 main by motor gear ratio
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degrees
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##	Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
## 24V50W
control = pid
pid_kp = 24.964
pid_ki = 1.331
pid_kd = 117.019
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##	E0 on MOTOR6
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.35	# reduce overheating, set to 0.5 for default config
hold_current: 0.2	# reduce overheating
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	In Voron GitHub source code https://github.com/VoronDesign/Voron-2/blob/Voron2.4/firmware/klipper_configurations/Octopus/Voron2_Octopus_Config.cfg
##	HE1 is the recommended SSR control pin, however making this printer mobile will render the bed heater useless.
##	If the printer uses DC heated bed (or former SSR pin) then it should not be changed.
heater_pin: PA1	## DC heated bed
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 1.0	# DC 24V 100W ; set to 0.6 if the output is more than 0.4W per cm^2.
min_temp: 0
max_temp: 125
# pwm_cycle_time: # For 50Hz (PAL) AC SSR, set it to 0.02, but for 60Hz (NTSC), set it to 0.0166. DC does not require that. Sourced from NERO 3D's video.
## DC 24V 100W
control: pid
pid_kp = 56.981
pid_ki = 1.751
pid_kd = 463.684

#####################################################################
# 	Other sensors
#####################################################################

# chamber sensor
# Un-set by commenting using # at the beginning of this line if not installed.
[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF5
max_temp: 75 # Max temperature before shut-down. Do not remove or comment this!!! Please increase if you have caught unwanted triggers.
# End

## Environment temperature sensor
## Experimental feature, adds additional safety and peace-of-mind.
# [temperature_sensor environment-temperature]
# sensor_type: Generic 3950
# sensor_pin: PF6
# max_temp: 50
## End

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NO NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"
##   "Generic 3950"

#####################################################################
# 	Probe
#####################################################################

[probe]
#--------------------------------------------------------------------

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
#pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------
x_offset: 0
y_offset: 25.0 # Set to 0 if using Voron Tap.
z_offset: 0 # May be changed anyways.
speed: 5.0
lift_speed: 20.0
samples: 3 # May change to 1 is using Voron Tap.
samples_result: median
sample_retract_dist: 1.0 # 3.0 if using inductive probe
samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PA8
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.25

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: PD12
hardware_pwm: true
kick_start_time: 0.5
shutdown_speed: 0.4
# max_power: 0.7 # Silent mode; if the fan was too loud, you may un-comment by removing the hash at the beginning.

[heater_fan exhaust_fan]
##	Exhaust fan - CNC_FAN3
pin: PD13
max_power: 1.0
shutdown_speed: 1.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 90
fan_speed: 1.0

# [output_pin enable_passive_POE]
#pin: PB11 # Heater pin that can drive PoE
# value: 1 # Enable by default.
## NOTE: Enabling passive PoE anyways may cause damage to the connected non-applicable devices. 
## See https://gist.github.com/Bunny350/c12d67f4ab930b46caadd36cc3f6822b for wiring instructions.

#####################################################################
# 	LED Control
#####################################################################

#[output_pin chamber-led]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PA3 # HE3 for all other features used.
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

# Klipper LED effects for Addressable LEDs / Neopixel
# [include led.cfg] # LED Effects (optimized for Stealthburner)
# [include sb-leds.cfg] # Voron Stealthburner LEDs

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:75, 75 # Assume if it was Voron Tap.
speed:100
z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (XMAX,YMAX) depending on your printer size
##	to respective belt positions

gantry_corners:
	-60,-10
	210, 220
##	Probe points
points:
	20,15
	20,120
	130,120
	130,15

speed: 150
horizontal_move_z: 10
retries: 15
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
# 	MCU-driven Display pins
#####################################################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment one of the display config file that you have.
##	Not needed if you don't wish want to use a MCU-driven displays

# [include rrd-12864.cfg] # Deprecated feature. Uncomment to indicate the printer use RepRapDiscount 128x64 Full Graphic Smart Controller as primary display
# [include btt-mini12864.cfg] # Uncomment to indicate the printer use BTT-MINI12864 as primary display

#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
    QUAD_GANTRY_LEVEL
    G0 X92 Y155 F12000
    G28 Z
    G0 X75 Y5 Z30 F12000

# Basic manual commands
[gcode_macro manual_filament_change]
description: Manually change filament
gcode:
    G0 X75 Y0 Z20 F7500

[gcode_macro manual_clean_change_nozzle]
description: Manually clean and change nozzle
gcode:
    G0 X75 Y0 Z100 F7500
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
description: Start print macro
gcode:
    G28
    G32
   # DIM
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
description: Complete printing macro
gcode:
 # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    M18                                 ; Shutdown steppers to stop making heat
    M117                                ; Clear message
#    INVOKE
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

## Classic dim and invoke macros
# [gcode_macro DIM] # Classic dim (used during print)
# description: Classic dim
# gcode:
#    SET_LED LED=btt_mini12864 RED=0.05 GREEN=0.05 BLUE=0.02

# [gcode_macro INVOKE] #Classic invoke (used during pause, cancel or complete)
# description: Classic invoke
# gcode:
#    SET_LED LED=btt_mini12864 RED=0.5 GREEN=0.5 BLUE=0.32

[menu __main __octoprint]	# New Voron printers use lightweight interface (i.e. Mainsail and fluidd)
type: disabled

[menu __main __control __aga]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Align gantry G32
gcode: G32

[menu __main __shutdown]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Shutdown
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
    SET_LED LED=btt_mini12864 RED=0.0 GREEN=0.0 BLUE=0.0
    {action_call_remote_method("shutdown_machine")}
    {% endif %}

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#####################################################################
#     Other features
#####################################################################

# [include klicky-probe.cfg] # Uncomment to indicate that this printer uses Klicky Probe by jlas1 as Z probe
# [include ptp.cfg] # PoE Networking Menu - optional feature
# [include flying-color.cfg] # Back LED - optional feature

